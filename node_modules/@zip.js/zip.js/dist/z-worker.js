!function(){"use strict";const{Array:t,Object:e,Math:n,Error:i,Uint8Array:a,Uint16Array:r,Uint32Array:s,Int32Array:l,DataView:o,TextEncoder:_,crypto:d,postMessage:c}=globalThis,f=[];for(let t=0;256>t;t++){let e=t;for(let t=0;8>t;t++)1&e?e=e>>>1^3988292384:e>>>=1;f[t]=e}class u{constructor(t){this.crc=t||-1}append(t){let e=0|this.crc;for(let n=0,i=0|t.length;i>n;n++)e=e>>>8^f[255&(e^t[n])];this.crc=e}get(){return~this.crc}}const h={concat(t,e){if(0===t.length||0===e.length)return t.concat(e);const n=t[t.length-1],i=h.getPartial(n);return 32===i?t.concat(e):h._shiftRight(e,i,0|n,t.slice(0,t.length-1))},bitLength(t){const e=t.length;if(0===e)return 0;const n=t[e-1];return 32*(e-1)+h.getPartial(n)},clamp(t,e){if(32*t.length<e)return t;const i=(t=t.slice(0,n.ceil(e/32))).length;return e&=31,i>0&&e&&(t[i-1]=h.partial(e,t[i-1]&2147483648>>e-1,1)),t},partial:(t,e,n)=>32===t?e:(n?0|e:e<<32-t)+1099511627776*t,getPartial:t=>n.round(t/1099511627776)||32,_shiftRight(t,e,n,i){for(void 0===i&&(i=[]);e>=32;e-=32)i.push(n),n=0;if(0===e)return i.concat(t);for(let a=0;a<t.length;a++)i.push(n|t[a]>>>e),n=t[a]<<32-e;const a=t.length?t[t.length-1]:0,r=h.getPartial(a);return i.push(h.partial(e+r&31,e+r>32?n:i.pop(),1)),i}},b={bytes:{fromBits(t){const e=h.bitLength(t)/8,n=new a(e);let i;for(let a=0;e>a;a++)0==(3&a)&&(i=t[a/4]),n[a]=i>>>24,i<<=8;return n},toBits(t){const e=[];let n,i=0;for(n=0;n<t.length;n++)i=i<<8|t[n],3==(3&n)&&(e.push(i),i=0);return 3&n&&e.push(h.partial(8*(3&n),i)),e}}},p={sha1:function(t){t?(this._h=t._h.slice(0),this._buffer=t._buffer.slice(0),this._length=t._length):this.reset()}};p.sha1.prototype={blockSize:512,reset:function(){const t=this;return t._h=this._init.slice(0),t._buffer=[],t._length=0,t},update:function(t){const e=this;"string"==typeof t&&(t=b.utf8String.toBits(t));const n=e._buffer=h.concat(e._buffer,t),a=e._length,r=e._length=a+h.bitLength(t);if(r>9007199254740991)throw new i("Cannot hash more than 2^53 - 1 bits");const l=new s(n);let o=0;for(let t=e.blockSize+a-(e.blockSize+a&e.blockSize-1);r>=t;t+=e.blockSize)e._block(l.subarray(16*o,16*(o+1))),o+=1;return n.splice(0,16*o),e},finalize:function(){const t=this;let e=t._buffer;const i=t._h;e=h.concat(e,[h.partial(1,1)]);for(let t=e.length+2;15&t;t++)e.push(0);for(e.push(n.floor(t._length/4294967296)),e.push(0|t._length);e.length;)t._block(e.splice(0,16));return t.reset(),i},_init:[1732584193,4023233417,2562383102,271733878,3285377520],_key:[1518500249,1859775393,2400959708,3395469782],_f:(t,e,n,i)=>t>19?t>39?t>59?t>79?void 0:e^n^i:e&n|e&i|n&i:e^n^i:e&n|~e&i,_S:(t,e)=>e<<t|e>>>32-t,_block:function(e){const i=this,a=i._h,r=t(80);for(let t=0;16>t;t++)r[t]=e[t];let s=a[0],l=a[1],o=a[2],_=a[3],d=a[4];for(let t=0;79>=t;t++){16>t||(r[t]=i._S(1,r[t-3]^r[t-8]^r[t-14]^r[t-16]));const e=i._S(5,s)+i._f(t,l,o,_)+d+r[t]+i._key[n.floor(t/20)]|0;d=_,_=o,o=i._S(30,l),l=s,s=e}a[0]=a[0]+s|0,a[1]=a[1]+l|0,a[2]=a[2]+o|0,a[3]=a[3]+_|0,a[4]=a[4]+d|0}};const w={getRandomValues(t){const e=new s(t.buffer),i=t=>{let e=987654321;const i=4294967295;return()=>(e=36969*(65535&e)+(e>>16)&i,(((e<<16)+(t=18e3*(65535&t)+(t>>16)&i)&i)/4294967296+.5)*(n.random()>.5?1:-1))};for(let a,r=0;r<t.length;r+=4){const t=i(4294967296*(a||n.random()));a=987654071*t(),e[r/4]=4294967296*t()|0}return t}},x={importKey:t=>new x.hmacSha1(b.bytes.toBits(t)),pbkdf2(t,e,n,a){if(n=n||1e4,0>a||0>n)throw new i("invalid params to pbkdf2");const r=1+(a>>5)<<2;let s,l,_,d,c;const f=new ArrayBuffer(r),u=new o(f);let p=0;const w=h;for(e=b.bytes.toBits(e),c=1;(r||1)>p;c++){for(s=l=t.encrypt(w.concat(e,[c])),_=1;n>_;_++)for(l=t.encrypt(l),d=0;d<l.length;d++)s[d]^=l[d];for(_=0;(r||1)>p&&_<s.length;_++)u.setInt32(p,s[_]),p+=4}return f.slice(0,a/8)},hmacSha1:class{constructor(t){const e=this,n=e._hash=p.sha1,i=[[],[]],a=n.prototype.blockSize/32;e._baseHash=[new n,new n],t.length>a&&(t=n.hash(t));for(let e=0;a>e;e++)i[0][e]=909522486^t[e],i[1][e]=1549556828^t[e];e._baseHash[0].update(i[0]),e._baseHash[1].update(i[1]),e._resultHash=new n(e._baseHash[0])}reset(){const t=this;t._resultHash=new t._hash(t._baseHash[0]),t._updated=!1}update(t){this._updated=!0,this._resultHash.update(t)}digest(){const t=this,e=t._resultHash.finalize(),n=new t._hash(t._baseHash[1]).update(e).finalize();return t.reset(),n}encrypt(t){if(this._updated)throw new i("encrypt on already updated hmac called!");return this.update(t),this.digest(t)}}},g="Invalid pasword",y=16,m={name:"PBKDF2"},k=e.assign({hash:{name:"HMAC"}},m),v=e.assign({iterations:1e3,hash:{name:"SHA-1"}},m),S=["deriveBits"],z=[8,12,16],I=[16,24,32],C=10,B=[0,0,0,0],E=void 0!==d,V=E&&void 0!==d.subtle,H=b.bytes,A=class{constructor(t){const e=this;e._tables=[[[],[],[],[],[]],[[],[],[],[],[]]],e._tables[0][0][0]||e._precompute();const n=e._tables[0][4],a=e._tables[1],r=t.length;let s,l,o,_=1;if(4!==r&&6!==r&&8!==r)throw new i("invalid aes key size");for(e._key=[l=t.slice(0),o=[]],s=r;4*r+28>s;s++){let t=l[s-1];(s%r==0||8===r&&s%r==4)&&(t=n[t>>>24]<<24^n[t>>16&255]<<16^n[t>>8&255]<<8^n[255&t],s%r==0&&(t=t<<8^t>>>24^_<<24,_=_<<1^283*(_>>7))),l[s]=l[s-r]^t}for(let t=0;s;t++,s--){const e=l[3&t?s:s-4];o[t]=4>=s||4>t?e:a[0][n[e>>>24]]^a[1][n[e>>16&255]]^a[2][n[e>>8&255]]^a[3][n[255&e]]}}encrypt(t){return this._crypt(t,0)}decrypt(t){return this._crypt(t,1)}_precompute(){const t=this._tables[0],e=this._tables[1],n=t[4],i=e[4],a=[],r=[];let s,l,o,_;for(let t=0;256>t;t++)r[(a[t]=t<<1^283*(t>>7))^t]=t;for(let d=s=0;!n[d];d^=l||1,s=r[s]||1){let r=s^s<<1^s<<2^s<<3^s<<4;r=r>>8^255&r^99,n[d]=r,i[r]=d,_=a[o=a[l=a[d]]];let c=16843009*_^65537*o^257*l^16843008*d,f=257*a[r]^16843008*r;for(let n=0;4>n;n++)t[n][d]=f=f<<24^f>>>8,e[n][r]=c=c<<24^c>>>8}for(let n=0;5>n;n++)t[n]=t[n].slice(0),e[n]=e[n].slice(0)}_crypt(t,e){if(4!==t.length)throw new i("invalid aes block size");const n=this._key[e],a=n.length/4-2,r=[0,0,0,0],s=this._tables[e],l=s[0],o=s[1],_=s[2],d=s[3],c=s[4];let f,u,h,b=t[0]^n[0],p=t[e?3:1]^n[1],w=t[2]^n[2],x=t[e?1:3]^n[3],g=4;for(let t=0;a>t;t++)f=l[b>>>24]^o[p>>16&255]^_[w>>8&255]^d[255&x]^n[g],u=l[p>>>24]^o[w>>16&255]^_[x>>8&255]^d[255&b]^n[g+1],h=l[w>>>24]^o[x>>16&255]^_[b>>8&255]^d[255&p]^n[g+2],x=l[x>>>24]^o[b>>16&255]^_[p>>8&255]^d[255&w]^n[g+3],g+=4,b=f,p=u,w=h;for(let t=0;4>t;t++)r[e?3&-t:t]=c[b>>>24]<<24^c[p>>16&255]<<16^c[w>>8&255]<<8^c[255&x]^n[g++],f=b,b=p,p=w,w=x,x=f;return r}},K=class{constructor(t,e){this._prf=t,this._initIv=e,this._iv=e}reset(){this._iv=this._initIv}update(t){return this.calculate(this._prf,t,this._iv)}incWord(t){if(255==(t>>24&255)){let e=t>>16&255,n=t>>8&255,i=255&t;255===e?(e=0,255===n?(n=0,255===i?i=0:++i):++n):++e,t=0,t+=e<<16,t+=n<<8,t+=i}else t+=1<<24;return t}incCounter(t){0===(t[0]=this.incWord(t[0]))&&(t[1]=this.incWord(t[1]))}calculate(t,e,n){let i;if(!(i=e.length))return[];const a=h.bitLength(e);for(let a=0;i>a;a+=4){this.incCounter(n);const i=t.encrypt(n);e[a]^=i[0],e[a+1]^=i[1],e[a+2]^=i[2],e[a+3]^=i[3]}return h.clamp(e,a)}},D=x.hmacSha1;class P{constructor(t,n,i){e.assign(this,{password:t,signed:n,strength:i-1,pendingInput:new a(0)})}async append(e){const n=this;if(n.password){const a=G(e,0,z[n.strength]+2);await(async(t,e,n)=>{await T(t,n,G(e,0,z[t.strength]));const a=G(e,z[t.strength]),r=t.keys.passwordVerification;if(r[0]!=a[0]||r[1]!=a[1])throw new i(g)})(n,a,n.password),n.password=null,n.aesCtrGladman=new K(new A(n.keys.key),t.from(B)),n.hmac=new D(n.keys.authentication),e=G(e,z[n.strength]+2)}return W(n,e,new a(e.length-C-(e.length-C)%y),0,C,!0)}flush(){const t=this,e=t.pendingInput,n=G(e,0,e.length-C),i=G(e,e.length-C);let r=new a(0);if(n.length){const e=H.toBits(n);t.hmac.update(e);const i=t.aesCtrGladman.update(e);r=H.fromBits(i)}let s=!0;if(t.signed){const e=G(H.fromBits(t.hmac.digest()),0,C);for(let t=0;C>t;t++)e[t]!=i[t]&&(s=!1)}return{valid:s,data:r}}}class R{constructor(t,n){e.assign(this,{password:t,strength:n-1,pendingInput:new a(0)})}async append(e){const n=this;let i=new a(0);n.password&&(i=await(async(t,e)=>{const n=(i=new a(z[t.strength]),E&&"function"==typeof d.getRandomValues?d.getRandomValues(i):w.getRandomValues(i));var i;return await T(t,e,n),U(n,t.keys.passwordVerification)})(n,n.password),n.password=null,n.aesCtrGladman=new K(new A(n.keys.key),t.from(B)),n.hmac=new D(n.keys.authentication));const r=new a(i.length+e.length-e.length%y);return r.set(i,0),W(n,e,r,i.length,0)}flush(){const t=this;let e=new a(0);if(t.pendingInput.length){const n=t.aesCtrGladman.update(H.toBits(t.pendingInput));t.hmac.update(n),e=H.fromBits(n)}const n=G(H.fromBits(t.hmac.digest()),0,C);return{data:U(e,n),signature:n}}}function W(t,e,n,i,r,s){const l=e.length-r;let o;for(t.pendingInput.length&&(e=U(t.pendingInput,e),n=((t,e)=>{if(e&&e>t.length){const n=t;(t=new a(e)).set(n,0)}return t})(n,l-l%y)),o=0;l-y>=o;o+=y){const a=H.toBits(G(e,o,o+y));s&&t.hmac.update(a);const r=t.aesCtrGladman.update(a);s||t.hmac.update(r),n.set(H.fromBits(r),o+i)}return t.pendingInput=G(e,o),n}async function T(t,n,i){const r=(t=>{if(void 0===_){const e=new a((t=unescape(encodeURIComponent(t))).length);for(let n=0;n<e.length;n++)e[n]=t.charCodeAt(n);return e}return(new _).encode(t)})(n),s=await((t,e,n,i,a)=>E&&V&&"function"==typeof d.subtle.importKey?d.subtle.importKey("raw",e,n,!1,a):x.importKey(e))(0,r,k,0,S),l=await(async(t,e,n)=>E&&V&&"function"==typeof d.subtle.deriveBits?await d.subtle.deriveBits(t,e,n):x.pbkdf2(e,t.salt,v.iterations,n))(e.assign({salt:i},v),s,8*(2*I[t.strength]+2)),o=new a(l);t.keys={key:H.toBits(G(o,0,I[t.strength])),authentication:H.toBits(G(o,I[t.strength],2*I[t.strength])),passwordVerification:G(o,2*I[t.strength])}}function U(t,e){let n=t;return t.length+e.length&&(n=new a(t.length+e.length),n.set(t,0),n.set(e,t.length)),n}function G(t,e,n){return t.subarray(e,n)}class L{constructor(t,n){e.assign(this,{password:t,passwordVerification:n}),F(this,t)}append(t){const e=this;if(e.password){const n=M(e,t.subarray(0,12));if(e.password=null,n[11]!=e.passwordVerification)throw new i(g);t=t.subarray(12)}return M(e,t)}flush(){return{valid:!0,data:new a(0)}}}class q{constructor(t,n){e.assign(this,{password:t,passwordVerification:n}),F(this,t)}append(t){const e=this;let n,i;if(e.password){e.password=null;const r=d.getRandomValues(new a(12));r[11]=e.passwordVerification,n=new a(t.length+r.length),n.set(j(e,r),0),i=12}else n=new a(t.length),i=0;return n.set(j(e,t),i),n}flush(){return{data:new a(0)}}}function M(t,e){const n=new a(e.length);for(let i=0;i<e.length;i++)n[i]=J(t)^e[i],O(t,n[i]);return n}function j(t,e){const n=new a(e.length);for(let i=0;i<e.length;i++)n[i]=J(t)^e[i],O(t,e[i]);return n}function F(t,e){t.keys=[305419896,591751049,878082192],t.crcKey0=new u(t.keys[0]),t.crcKey2=new u(t.keys[2]);for(let n=0;n<e.length;n++)O(t,e.charCodeAt(n))}function O(t,e){t.crcKey0.append([e]),t.keys[0]=~t.crcKey0.get(),t.keys[1]=Q(t.keys[1]+N(t.keys[0])),t.keys[1]=Q(n.imul(t.keys[1],134775813)+1),t.crcKey2.append([t.keys[1]>>>24]),t.keys[2]=~t.crcKey2.get()}function J(t){const e=2|t.keys[2];return N(n.imul(e,1^e)>>>8)}function N(t){return 255&t}function Q(t){return 4294967295&t}const X="deflate",Y="inflate",Z="Invalid signature";class ${constructor(t,{signature:n,password:i,signed:a,compressed:r,zipCrypto:s,passwordVerification:l,encryptionStrength:o},{chunkSize:_}){const d=!!i;e.assign(this,{signature:n,encrypted:d,signed:a,compressed:r,inflate:r&&new t({chunkSize:_}),crc32:a&&new u,zipCrypto:s,decrypt:d&&s?new L(i,l):new P(i,a,o)})}async append(t){const e=this;return e.encrypted&&t.length&&(t=await e.decrypt.append(t)),e.compressed&&t.length&&(t=await e.inflate.append(t)),(!e.encrypted||e.zipCrypto)&&e.signed&&t.length&&e.crc32.append(t),t}async flush(){const t=this;let e,n=new a(0);if(t.encrypted){const e=t.decrypt.flush();if(!e.valid)throw new i(Z);n=e.data}if((!t.encrypted||t.zipCrypto)&&t.signed){const n=new o(new a(4).buffer);if(e=t.crc32.get(),n.setUint32(0,e),t.signature!=n.getUint32(0,!1))throw new i(Z)}return t.compressed&&(n=await t.inflate.append(n)||new a(0),await t.inflate.flush()),{data:n,signature:e}}}class tt{constructor(t,{encrypted:n,signed:i,compressed:a,level:r,zipCrypto:s,password:l,passwordVerification:o,encryptionStrength:_},{chunkSize:d}){e.assign(this,{encrypted:n,signed:i,compressed:a,deflate:a&&new t({level:r||5,chunkSize:d}),crc32:i&&new u,zipCrypto:s,encrypt:n&&s?new q(l,o):new R(l,_)})}async append(t){const e=this;let n=t;return e.compressed&&t.length&&(n=await e.deflate.append(t)),e.encrypted&&n.length&&(n=await e.encrypt.append(n)),(!e.encrypted||e.zipCrypto)&&e.signed&&t.length&&e.crc32.append(t),n}async flush(){const t=this;let e,n=new a(0);if(t.compressed&&(n=await t.deflate.flush()||new a(0)),t.encrypted){n=await t.encrypt.append(n);const i=t.encrypt.flush();e=i.signature;const r=new a(n.length+i.data.length);r.set(n,0),r.set(i.data,n.length),n=r}return t.encrypted&&!t.zipCrypto||!t.signed||(e=t.crc32.get()),{data:n,signature:e}}}const et={init(t){t.scripts&&t.scripts.length&&importScripts.apply(void 0,t.scripts);const e=t.options;let n;self.initCodec&&self.initCodec(),e.codecType.startsWith(X)?n=self.Deflate:e.codecType.startsWith(Y)&&(n=self.Inflate),nt=((t,e,n)=>e.codecType.startsWith(X)?new tt(t,e,n):e.codecType.startsWith(Y)?new $(t,e,n):void 0)(n,e,t.config)},append:async t=>({data:await nt.append(t.data)}),flush:()=>nt.flush()};let nt;addEventListener("message",(async t=>{const e=t.data,n=e.type,i=et[n];if(i)try{e.data&&(e.data=new a(e.data));const t=await i(e)||{};if(t.type=n,t.data)try{t.data=t.data.buffer,c(t,[t.data])}catch(e){c(t)}else c(t)}catch(t){c({type:n,error:{message:t.message,stack:t.stack}})}}));const it=-2;function at(e){return rt(e.map((([e,n])=>new t(e).fill(n,0,e))))}function rt(e){return e.reduce(((e,n)=>e.concat(t.isArray(n)?rt(n):n)),[])}const st=[0,1,2,3].concat(...at([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function lt(){const t=this;function e(t,e){let n=0;do{n|=1&t,t>>>=1,n<<=1}while(--e>0);return n>>>1}t.build_tree=i=>{const a=t.dyn_tree,r=t.stat_desc.static_tree,s=t.stat_desc.elems;let l,o,_,d=-1;for(i.heap_len=0,i.heap_max=573,l=0;s>l;l++)0!==a[2*l]?(i.heap[++i.heap_len]=d=l,i.depth[l]=0):a[2*l+1]=0;for(;2>i.heap_len;)_=i.heap[++i.heap_len]=2>d?++d:0,a[2*_]=1,i.depth[_]=0,i.opt_len--,r&&(i.static_len-=r[2*_+1]);for(t.max_code=d,l=n.floor(i.heap_len/2);l>=1;l--)i.pqdownheap(a,l);_=s;do{l=i.heap[1],i.heap[1]=i.heap[i.heap_len--],i.pqdownheap(a,1),o=i.heap[1],i.heap[--i.heap_max]=l,i.heap[--i.heap_max]=o,a[2*_]=a[2*l]+a[2*o],i.depth[_]=n.max(i.depth[l],i.depth[o])+1,a[2*l+1]=a[2*o+1]=_,i.heap[1]=_++,i.pqdownheap(a,1)}while(i.heap_len>=2);i.heap[--i.heap_max]=i.heap[1],(e=>{const n=t.dyn_tree,i=t.stat_desc.static_tree,a=t.stat_desc.extra_bits,r=t.stat_desc.extra_base,s=t.stat_desc.max_length;let l,o,_,d,c,f,u=0;for(d=0;15>=d;d++)e.bl_count[d]=0;for(n[2*e.heap[e.heap_max]+1]=0,l=e.heap_max+1;573>l;l++)o=e.heap[l],d=n[2*n[2*o+1]+1]+1,d>s&&(d=s,u++),n[2*o+1]=d,o>t.max_code||(e.bl_count[d]++,c=0,r>o||(c=a[o-r]),f=n[2*o],e.opt_len+=f*(d+c),i&&(e.static_len+=f*(i[2*o+1]+c)));if(0!==u){do{for(d=s-1;0===e.bl_count[d];)d--;e.bl_count[d]--,e.bl_count[d+1]+=2,e.bl_count[s]--,u-=2}while(u>0);for(d=s;0!==d;d--)for(o=e.bl_count[d];0!==o;)_=e.heap[--l],_>t.max_code||(n[2*_+1]!=d&&(e.opt_len+=(d-n[2*_+1])*n[2*_],n[2*_+1]=d),o--)}})(i),((t,n,i)=>{const a=[];let r,s,l,o=0;for(r=1;15>=r;r++)a[r]=o=o+i[r-1]<<1;for(s=0;n>=s;s++)l=t[2*s+1],0!==l&&(t[2*s]=e(a[l]++,l))})(a,t.max_code,i.bl_count)}}function ot(t,e,n,i,a){const r=this;r.static_tree=t,r.extra_bits=e,r.extra_base=n,r.elems=i,r.max_length=a}lt._length_code=[0,1,2,3,4,5,6,7].concat(...at([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),lt.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],lt.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],lt.d_code=t=>256>t?st[t]:st[256+(t>>>7)],lt.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],lt.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],lt.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],lt.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];const _t=at([[144,8],[112,9],[24,7],[8,8]]);ot.static_ltree=rt([12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,19,275,147,403,83,339,211,467,51,307,179,435,115,371,243,499,11,267,139,395,75,331,203,459,43,299,171,427,107,363,235,491,27,283,155,411,91,347,219,475,59,315,187,443,123,379,251,507,7,263,135,391,71,327,199,455,39,295,167,423,103,359,231,487,23,279,151,407,87,343,215,471,55,311,183,439,119,375,247,503,15,271,143,399,79,335,207,463,47,303,175,431,111,367,239,495,31,287,159,415,95,351,223,479,63,319,191,447,127,383,255,511,0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120,4,68,36,100,20,84,52,116,3,131,67,195,35,163,99,227].map(((t,e)=>[t,_t[e]])));const dt=at([[30,5]]);function ct(t,e,n,i,a){const r=this;r.good_length=t,r.max_lazy=e,r.nice_length=n,r.max_chain=i,r.func=a}ot.static_dtree=rt([0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23].map(((t,e)=>[t,dt[e]]))),ot.static_l_desc=new ot(ot.static_ltree,lt.extra_lbits,257,286,15),ot.static_d_desc=new ot(ot.static_dtree,lt.extra_dbits,0,30,15),ot.static_bl_desc=new ot(null,lt.extra_blbits,0,19,7);const ft=[new ct(0,0,0,0,0),new ct(4,4,8,4,1),new ct(4,5,16,8,1),new ct(4,6,32,32,1),new ct(4,4,16,16,2),new ct(8,16,32,32,2),new ct(8,16,128,128,2),new ct(8,32,128,256,2),new ct(32,128,258,1024,2),new ct(32,258,258,4096,2)],ut=["need dictionary","stream end","","","stream error","data error","","buffer error","",""],ht=113,bt=666,pt=262;function wt(t,e,n,i){const a=t[2*e],r=t[2*n];return r>a||a==r&&i[e]<=i[n]}function xt(){const t=this;let e,i,s,l,o,_,d,c,f,u,h,b,p,w,x,g,y,m,k,v,S,z,I,C,B,E,V,H,A,K,D,P,R;const W=new lt,T=new lt,U=new lt;let G,L,q,M,j,F;function O(){let e;for(e=0;286>e;e++)D[2*e]=0;for(e=0;30>e;e++)P[2*e]=0;for(e=0;19>e;e++)R[2*e]=0;D[512]=1,t.opt_len=t.static_len=0,L=q=0}function J(t,e){let n,i=-1,a=t[1],r=0,s=7,l=4;0===a&&(s=138,l=3),t[2*(e+1)+1]=65535;for(let o=0;e>=o;o++)n=a,a=t[2*(o+1)+1],++r<s&&n==a||(l>r?R[2*n]+=r:0!==n?(n!=i&&R[2*n]++,R[32]++):r>10?R[36]++:R[34]++,r=0,i=n,0===a?(s=138,l=3):n==a?(s=6,l=3):(s=7,l=4))}function N(e){t.pending_buf[t.pending++]=e}function Q(t){N(255&t),N(t>>>8&255)}function X(t,e){let n;const i=e;F>16-i?(n=t,j|=n<<F&65535,Q(j),j=n>>>16-F,F+=i-16):(j|=t<<F&65535,F+=i)}function Y(t,e){const n=2*t;X(65535&e[n],65535&e[n+1])}function Z(t,e){let n,i,a=-1,r=t[1],s=0,l=7,o=4;for(0===r&&(l=138,o=3),n=0;e>=n;n++)if(i=r,r=t[2*(n+1)+1],++s>=l||i!=r){if(o>s)do{Y(i,R)}while(0!=--s);else 0!==i?(i!=a&&(Y(i,R),s--),Y(16,R),X(s-3,2)):s>10?(Y(18,R),X(s-11,7)):(Y(17,R),X(s-3,3));s=0,a=i,0===r?(l=138,o=3):i==r?(l=6,o=3):(l=7,o=4)}}function $(){16==F?(Q(j),j=0,F=0):8>F||(N(255&j),j>>>=8,F-=8)}function tt(e,i){let a,r,s;if(t.dist_buf[L]=e,t.lc_buf[L]=255&i,L++,0===e?D[2*i]++:(q++,e--,D[2*(lt._length_code[i]+256+1)]++,P[2*lt.d_code(e)]++),0==(8191&L)&&V>2){for(a=8*L,r=S-y,s=0;30>s;s++)a+=P[2*s]*(5+lt.extra_dbits[s]);if(a>>>=3,q<n.floor(L/2)&&a<n.floor(r/2))return!0}return L==G-1}function et(e,n){let i,a,r,s,l=0;if(0!==L)do{i=t.dist_buf[l],a=t.lc_buf[l],l++,0===i?Y(a,e):(r=lt._length_code[a],Y(r+256+1,e),s=lt.extra_lbits[r],0!==s&&(a-=lt.base_length[r],X(a,s)),i--,r=lt.d_code(i),Y(r,n),s=lt.extra_dbits[r],0!==s&&(i-=lt.base_dist[r],X(i,s)))}while(L>l);Y(256,e),M=e[513]}function nt(){F>8?Q(j):F>0&&N(255&j),j=0,F=0}function at(e,n,i){X(0+(i?1:0),3),((e,n)=>{nt(),M=8,Q(n),Q(~n),t.pending_buf.set(c.subarray(e,e+n),t.pending),t.pending+=n})(e,n)}function rt(n){((e,n,i)=>{let a,r,s=0;V>0?(W.build_tree(t),T.build_tree(t),s=(()=>{let e;for(J(D,W.max_code),J(P,T.max_code),U.build_tree(t),e=18;e>=3&&0===R[2*lt.bl_order[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(),a=t.opt_len+3+7>>>3,r=t.static_len+3+7>>>3,r>a||(a=r)):a=r=n+5,n+4>a||-1==e?r==a?(X(2+(i?1:0),3),et(ot.static_ltree,ot.static_dtree)):(X(4+(i?1:0),3),((t,e,n)=>{let i;for(X(t-257,5),X(e-1,5),X(n-4,4),i=0;n>i;i++)X(R[2*lt.bl_order[i]+1],3);Z(D,t-1),Z(P,e-1)})(W.max_code+1,T.max_code+1,s+1),et(D,P)):at(e,n,i),O(),i&&nt()})(0>y?-1:y,S-y,n),y=S,e.flush_pending()}function st(){let t,n,i,a;do{if(a=f-I-S,0===a&&0===S&&0===I)a=o;else if(-1==a)a--;else if(S>=o+o-pt){c.set(c.subarray(o,o+o),0),z-=o,S-=o,y-=o,t=p,i=t;do{n=65535&h[--i],h[i]=o>n?0:n-o}while(0!=--t);t=o,i=t;do{n=65535&u[--i],u[i]=o>n?0:n-o}while(0!=--t);a+=o}if(0===e.avail_in)return;t=e.read_buf(c,S+I,a),I+=t,3>I||(b=255&c[S],b=(b<<g^255&c[S+1])&x)}while(pt>I&&0!==e.avail_in)}function _t(t){let e,n,i=B,a=S,r=C;const s=S>o-pt?S-(o-pt):0;let l=K;const _=d,f=S+258;let h=c[a+r-1],b=c[a+r];A>C||(i>>=2),l>I&&(l=I);do{if(e=t,c[e+r]==b&&c[e+r-1]==h&&c[e]==c[a]&&c[++e]==c[a+1]){a+=2,e++;do{}while(c[++a]==c[++e]&&c[++a]==c[++e]&&c[++a]==c[++e]&&c[++a]==c[++e]&&c[++a]==c[++e]&&c[++a]==c[++e]&&c[++a]==c[++e]&&c[++a]==c[++e]&&f>a);if(n=258-(f-a),a=f-258,n>r){if(z=t,r=n,n>=l)break;h=c[a+r-1],b=c[a+r]}}}while((t=65535&u[t&_])>s&&0!=--i);return r>I?I:r}t.depth=[],t.bl_count=[],t.heap=[],D=[],P=[],R=[],t.pqdownheap=(e,n)=>{const i=t.heap,a=i[n];let r=n<<1;for(;r<=t.heap_len&&(r<t.heap_len&&wt(e,i[r+1],i[r],t.depth)&&r++,!wt(e,a,i[r],t.depth));)i[n]=i[r],n=r,r<<=1;i[n]=a},t.deflateInit=(e,k,z,L,q,J)=>(L||(L=8),q||(q=8),J||(J=0),e.msg=null,-1==k&&(k=6),1>q||q>9||8!=L||9>z||z>15||0>k||k>9||0>J||J>2?it:(e.dstate=t,_=z,o=1<<_,d=o-1,w=q+7,p=1<<w,x=p-1,g=n.floor((w+3-1)/3),c=new a(2*o),u=[],h=[],G=1<<q+6,t.pending_buf=new a(4*G),s=4*G,t.dist_buf=new r(G),t.lc_buf=new a(G),V=k,H=J,(e=>(e.total_in=e.total_out=0,e.msg=null,t.pending=0,t.pending_out=0,i=ht,l=0,W.dyn_tree=D,W.stat_desc=ot.static_l_desc,T.dyn_tree=P,T.stat_desc=ot.static_d_desc,U.dyn_tree=R,U.stat_desc=ot.static_bl_desc,j=0,F=0,M=8,O(),(()=>{f=2*o,h[p-1]=0;for(let t=0;p-1>t;t++)h[t]=0;E=ft[V].max_lazy,A=ft[V].good_length,K=ft[V].nice_length,B=ft[V].max_chain,S=0,y=0,I=0,m=C=2,v=0,b=0})(),0))(e))),t.deflateEnd=()=>42!=i&&i!=ht&&i!=bt?it:(t.lc_buf=null,t.dist_buf=null,t.pending_buf=null,h=null,u=null,c=null,t.dstate=null,i==ht?-3:0),t.deflateParams=(t,e,n)=>{let i=0;return-1==e&&(e=6),0>e||e>9||0>n||n>2?it:(ft[V].func!=ft[e].func&&0!==t.total_in&&(i=t.deflate(1)),V!=e&&(V=e,E=ft[V].max_lazy,A=ft[V].good_length,K=ft[V].nice_length,B=ft[V].max_chain),H=n,i)},t.deflateSetDictionary=(t,e,n)=>{let a,r=n,s=0;if(!e||42!=i)return it;if(3>r)return 0;for(r>o-pt&&(r=o-pt,s=n-r),c.set(e.subarray(s,s+r),0),S=r,y=r,b=255&c[0],b=(b<<g^255&c[1])&x,a=0;r-3>=a;a++)b=(b<<g^255&c[a+2])&x,u[a&d]=h[b],h[b]=a;return 0},t.deflate=(n,a)=>{let r,f,w,B,A;if(a>4||0>a)return it;if(!n.next_out||!n.next_in&&0!==n.avail_in||i==bt&&4!=a)return n.msg=ut[4],it;if(0===n.avail_out)return n.msg=ut[7],-5;var K;if(e=n,B=l,l=a,42==i&&(f=8+(_-8<<4)<<8,w=(V-1&255)>>1,w>3&&(w=3),f|=w<<6,0!==S&&(f|=32),f+=31-f%31,i=ht,N((K=f)>>8&255),N(255&K)),0!==t.pending){if(e.flush_pending(),0===e.avail_out)return l=-1,0}else if(0===e.avail_in&&B>=a&&4!=a)return e.msg=ut[7],-5;if(i==bt&&0!==e.avail_in)return n.msg=ut[7],-5;if(0!==e.avail_in||0!==I||0!=a&&i!=bt){switch(A=-1,ft[V].func){case 0:A=(t=>{let n,i=65535;for(i>s-5&&(i=s-5);;){if(1>=I){if(st(),0===I&&0==t)return 0;if(0===I)break}if(S+=I,I=0,n=y+i,(0===S||S>=n)&&(I=S-n,S=n,rt(!1),0===e.avail_out))return 0;if(S-y>=o-pt&&(rt(!1),0===e.avail_out))return 0}return rt(4==t),0===e.avail_out?4==t?2:0:4==t?3:1})(a);break;case 1:A=(t=>{let n,i=0;for(;;){if(pt>I){if(st(),pt>I&&0==t)return 0;if(0===I)break}if(3>I||(b=(b<<g^255&c[S+2])&x,i=65535&h[b],u[S&d]=h[b],h[b]=S),0===i||(S-i&65535)>o-pt||2!=H&&(m=_t(i)),3>m)n=tt(0,255&c[S]),I--,S++;else if(n=tt(S-z,m-3),I-=m,m>E||3>I)S+=m,m=0,b=255&c[S],b=(b<<g^255&c[S+1])&x;else{m--;do{S++,b=(b<<g^255&c[S+2])&x,i=65535&h[b],u[S&d]=h[b],h[b]=S}while(0!=--m);S++}if(n&&(rt(!1),0===e.avail_out))return 0}return rt(4==t),0===e.avail_out?4==t?2:0:4==t?3:1})(a);break;case 2:A=(t=>{let n,i,a=0;for(;;){if(pt>I){if(st(),pt>I&&0==t)return 0;if(0===I)break}if(3>I||(b=(b<<g^255&c[S+2])&x,a=65535&h[b],u[S&d]=h[b],h[b]=S),C=m,k=z,m=2,0!==a&&E>C&&o-pt>=(S-a&65535)&&(2!=H&&(m=_t(a)),5>=m&&(1==H||3==m&&S-z>4096)&&(m=2)),3>C||m>C)if(0!==v){if(n=tt(0,255&c[S-1]),n&&rt(!1),S++,I--,0===e.avail_out)return 0}else v=1,S++,I--;else{i=S+I-3,n=tt(S-1-k,C-3),I-=C-1,C-=2;do{++S>i||(b=(b<<g^255&c[S+2])&x,a=65535&h[b],u[S&d]=h[b],h[b]=S)}while(0!=--C);if(v=0,m=2,S++,n&&(rt(!1),0===e.avail_out))return 0}}return 0!==v&&(n=tt(0,255&c[S-1]),v=0),rt(4==t),0===e.avail_out?4==t?2:0:4==t?3:1})(a)}if(2!=A&&3!=A||(i=bt),0==A||2==A)return 0===e.avail_out&&(l=-1),0;if(1==A){if(1==a)X(2,3),Y(256,ot.static_ltree),$(),9>1+M+10-F&&(X(2,3),Y(256,ot.static_ltree),$()),M=7;else if(at(0,0,!1),3==a)for(r=0;p>r;r++)h[r]=0;if(e.flush_pending(),0===e.avail_out)return l=-1,0}}return 4!=a?0:1}}function gt(){const t=this;t.next_in_index=0,t.next_out_index=0,t.avail_in=0,t.total_in=0,t.avail_out=0,t.total_out=0}function yt(t){const e=new gt,r=(s=t&&t.chunkSize?t.chunkSize:65536)+5*(n.floor(s/16383)+1);var s;const l=new a(r);let o=t?t.level:-1;void 0===o&&(o=-1),e.deflateInit(o),e.next_out=l,this.append=(t,n)=>{let s,o,_=0,d=0,c=0;const f=[];if(t.length){e.next_in_index=0,e.next_in=t,e.avail_in=t.length;do{if(e.next_out_index=0,e.avail_out=r,s=e.deflate(0),0!=s)throw new i("deflating: "+e.msg);e.next_out_index&&(e.next_out_index==r?f.push(new a(l)):f.push(l.slice(0,e.next_out_index))),c+=e.next_out_index,n&&e.next_in_index>0&&e.next_in_index!=_&&(n(e.next_in_index),_=e.next_in_index)}while(e.avail_in>0||0===e.avail_out);return f.length>1?(o=new a(c),f.forEach((t=>{o.set(t,d),d+=t.length}))):o=f[0]||new a(0),o}},this.flush=()=>{let t,n,s=0,o=0;const _=[];do{if(e.next_out_index=0,e.avail_out=r,t=e.deflate(4),1!=t&&0!=t)throw new i("deflating: "+e.msg);r-e.avail_out>0&&_.push(l.slice(0,e.next_out_index)),o+=e.next_out_index}while(e.avail_in>0||0===e.avail_out);return e.deflateEnd(),n=new a(o),_.forEach((t=>{n.set(t,s),s+=t.length})),n}}gt.prototype={deflateInit:function(t,e){const n=this;return n.dstate=new xt,e||(e=15),n.dstate.deflateInit(n,t,e)},deflate:function(t){const e=this;return e.dstate?e.dstate.deflate(e,t):it},deflateEnd:function(){const t=this;if(!t.dstate)return it;const e=t.dstate.deflateEnd();return t.dstate=null,e},deflateParams:function(t,e){const n=this;return n.dstate?n.dstate.deflateParams(n,t,e):it},deflateSetDictionary:function(t,e){const n=this;return n.dstate?n.dstate.deflateSetDictionary(n,t,e):it},read_buf:function(t,e,n){const i=this;let a=i.avail_in;return a>n&&(a=n),0===a?0:(i.avail_in-=a,t.set(i.next_in.subarray(i.next_in_index,i.next_in_index+a),e),i.next_in_index+=a,i.total_in+=a,a)},flush_pending:function(){const t=this;let e=t.dstate.pending;e>t.avail_out&&(e=t.avail_out),0!==e&&(t.next_out.set(t.dstate.pending_buf.subarray(t.dstate.pending_out,t.dstate.pending_out+e),t.next_out_index),t.next_out_index+=e,t.dstate.pending_out+=e,t.total_out+=e,t.avail_out-=e,t.dstate.pending-=e,0===t.dstate.pending&&(t.dstate.pending_out=0))}};const mt=-2,kt=-3,vt=-5,St=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],zt=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],It=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],Ct=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],Bt=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],Et=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],Vt=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function Ht(){let t,e,n,i,a,r;function s(t,e,s,l,o,_,d,c,f,u,h){let b,p,w,x,g,y,m,k,v,S,z,I,C,B,E;S=0,g=s;do{n[t[e+S]]++,S++,g--}while(0!==g);if(n[0]==s)return d[0]=-1,c[0]=0,0;for(k=c[0],y=1;15>=y&&0===n[y];y++);for(m=y,y>k&&(k=y),g=15;0!==g&&0===n[g];g--);for(w=g,k>g&&(k=g),c[0]=k,B=1<<y;g>y;y++,B<<=1)if(0>(B-=n[y]))return kt;if(0>(B-=n[g]))return kt;for(n[g]+=B,r[1]=y=0,S=1,C=2;0!=--g;)r[C]=y+=n[S],C++,S++;g=0,S=0;do{0!==(y=t[e+S])&&(h[r[y]++]=g),S++}while(++g<s);for(s=r[w],r[0]=g=0,S=0,x=-1,I=-k,a[0]=0,z=0,E=0;w>=m;m++)for(b=n[m];0!=b--;){for(;m>I+k;){if(x++,I+=k,E=w-I,E=E>k?k:E,(p=1<<(y=m-I))>b+1&&(p-=b+1,C=m,E>y))for(;++y<E&&(p<<=1)>n[++C];)p-=n[C];if(E=1<<y,u[0]+E>1440)return kt;a[x]=z=u[0],u[0]+=E,0!==x?(r[x]=g,i[0]=y,i[1]=k,y=g>>>I-k,i[2]=z-a[x-1]-y,f.set(i,3*(a[x-1]+y))):d[0]=z}for(i[1]=m-I,s>S?h[S]<l?(i[0]=256>h[S]?0:96,i[2]=h[S++]):(i[0]=_[h[S]-l]+16+64,i[2]=o[h[S++]-l]):i[0]=192,p=1<<m-I,y=g>>>I;E>y;y+=p)f.set(i,3*(z+y));for(y=1<<m-1;0!=(g&y);y>>>=1)g^=y;for(g^=y,v=(1<<I)-1;(g&v)!=r[x];)x--,I-=k,v=(1<<I)-1}return 0!==B&&1!=w?vt:0}function o(s){let o;for(t||(t=[],e=[],n=new l(16),i=[],a=new l(15),r=new l(16)),e.length<s&&(e=[]),o=0;s>o;o++)e[o]=0;for(o=0;16>o;o++)n[o]=0;for(o=0;3>o;o++)i[o]=0;a.set(n.subarray(0,15),0),r.set(n.subarray(0,16),0)}this.inflate_trees_bits=(n,i,a,r,l)=>{let _;return o(19),t[0]=0,_=s(n,0,19,19,null,null,a,i,r,t,e),_==kt?l.msg="oversubscribed dynamic bit lengths tree":_!=vt&&0!==i[0]||(l.msg="incomplete dynamic bit lengths tree",_=kt),_},this.inflate_trees_dynamic=(n,i,a,r,l,_,d,c,f)=>{let u;return o(288),t[0]=0,u=s(a,0,n,257,Ct,Bt,_,r,c,t,e),0!=u||0===r[0]?(u==kt?f.msg="oversubscribed literal/length tree":-4!=u&&(f.msg="incomplete literal/length tree",u=kt),u):(o(288),u=s(a,n,i,0,Et,Vt,d,l,c,t,e),0!=u||0===l[0]&&n>257?(u==kt?f.msg="oversubscribed distance tree":u==vt?(f.msg="incomplete distance tree",u=kt):-4!=u&&(f.msg="empty distance tree with lengths",u=kt),u):0)}}function At(){const t=this;let e,n,i,a,r=0,s=0,l=0,o=0,_=0,d=0,c=0,f=0,u=0,h=0;function b(t,e,n,i,a,r,s,l){let o,_,d,c,f,u,h,b,p,w,x,g,y,m,k,v;h=l.next_in_index,b=l.avail_in,f=s.bitb,u=s.bitk,p=s.write,w=p<s.read?s.read-p-1:s.end-p,x=St[t],g=St[e];do{for(;20>u;)b--,f|=(255&l.read_byte(h++))<<u,u+=8;if(o=f&x,_=n,d=i,v=3*(d+o),0!==(c=_[v]))for(;;){if(f>>=_[v+1],u-=_[v+1],0!=(16&c)){for(c&=15,y=_[v+2]+(f&St[c]),f>>=c,u-=c;15>u;)b--,f|=(255&l.read_byte(h++))<<u,u+=8;for(o=f&g,_=a,d=r,v=3*(d+o),c=_[v];;){if(f>>=_[v+1],u-=_[v+1],0!=(16&c)){for(c&=15;c>u;)b--,f|=(255&l.read_byte(h++))<<u,u+=8;if(m=_[v+2]+(f&St[c]),f>>=c,u-=c,w-=y,m>p){k=p-m;do{k+=s.end}while(0>k);if(c=s.end-k,y>c){if(y-=c,p-k>0&&c>p-k)do{s.win[p++]=s.win[k++]}while(0!=--c);else s.win.set(s.win.subarray(k,k+c),p),p+=c,k+=c,c=0;k=0}}else k=p-m,p-k>0&&2>p-k?(s.win[p++]=s.win[k++],s.win[p++]=s.win[k++],y-=2):(s.win.set(s.win.subarray(k,k+2),p),p+=2,k+=2,y-=2);if(p-k>0&&y>p-k)do{s.win[p++]=s.win[k++]}while(0!=--y);else s.win.set(s.win.subarray(k,k+y),p),p+=y,k+=y,y=0;break}if(0!=(64&c))return l.msg="invalid distance code",y=l.avail_in-b,y=y>u>>3?u>>3:y,b+=y,h-=y,u-=y<<3,s.bitb=f,s.bitk=u,l.avail_in=b,l.total_in+=h-l.next_in_index,l.next_in_index=h,s.write=p,kt;o+=_[v+2],o+=f&St[c],v=3*(d+o),c=_[v]}break}if(0!=(64&c))return 0!=(32&c)?(y=l.avail_in-b,y=y>u>>3?u>>3:y,b+=y,h-=y,u-=y<<3,s.bitb=f,s.bitk=u,l.avail_in=b,l.total_in+=h-l.next_in_index,l.next_in_index=h,s.write=p,1):(l.msg="invalid literal/length code",y=l.avail_in-b,y=y>u>>3?u>>3:y,b+=y,h-=y,u-=y<<3,s.bitb=f,s.bitk=u,l.avail_in=b,l.total_in+=h-l.next_in_index,l.next_in_index=h,s.write=p,kt);if(o+=_[v+2],o+=f&St[c],v=3*(d+o),0===(c=_[v])){f>>=_[v+1],u-=_[v+1],s.win[p++]=_[v+2],w--;break}}else f>>=_[v+1],u-=_[v+1],s.win[p++]=_[v+2],w--}while(w>=258&&b>=10);return y=l.avail_in-b,y=y>u>>3?u>>3:y,b+=y,h-=y,u-=y<<3,s.bitb=f,s.bitk=u,l.avail_in=b,l.total_in+=h-l.next_in_index,l.next_in_index=h,s.write=p,0}t.init=(t,r,s,l,o,_)=>{e=0,c=t,f=r,i=s,u=l,a=o,h=_,n=null},t.proc=(t,p,w)=>{let x,g,y,m,k,v,S,z=0,I=0,C=0;for(C=p.next_in_index,m=p.avail_in,z=t.bitb,I=t.bitk,k=t.write,v=k<t.read?t.read-k-1:t.end-k;;)switch(e){case 0:if(v>=258&&m>=10&&(t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,w=b(c,f,i,u,a,h,t,p),C=p.next_in_index,m=p.avail_in,z=t.bitb,I=t.bitk,k=t.write,v=k<t.read?t.read-k-1:t.end-k,0!=w)){e=1==w?7:9;break}l=c,n=i,s=u,e=1;case 1:for(x=l;x>I;){if(0===m)return t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);w=0,m--,z|=(255&p.read_byte(C++))<<I,I+=8}if(g=3*(s+(z&St[x])),z>>>=n[g+1],I-=n[g+1],y=n[g],0===y){o=n[g+2],e=6;break}if(0!=(16&y)){_=15&y,r=n[g+2],e=2;break}if(0==(64&y)){l=y,s=g/3+n[g+2];break}if(0!=(32&y)){e=7;break}return e=9,p.msg="invalid literal/length code",w=kt,t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);case 2:for(x=_;x>I;){if(0===m)return t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);w=0,m--,z|=(255&p.read_byte(C++))<<I,I+=8}r+=z&St[x],z>>=x,I-=x,l=f,n=a,s=h,e=3;case 3:for(x=l;x>I;){if(0===m)return t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);w=0,m--,z|=(255&p.read_byte(C++))<<I,I+=8}if(g=3*(s+(z&St[x])),z>>=n[g+1],I-=n[g+1],y=n[g],0!=(16&y)){_=15&y,d=n[g+2],e=4;break}if(0==(64&y)){l=y,s=g/3+n[g+2];break}return e=9,p.msg="invalid distance code",w=kt,t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);case 4:for(x=_;x>I;){if(0===m)return t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);w=0,m--,z|=(255&p.read_byte(C++))<<I,I+=8}d+=z&St[x],z>>=x,I-=x,e=5;case 5:for(S=k-d;0>S;)S+=t.end;for(;0!==r;){if(0===v&&(k==t.end&&0!==t.read&&(k=0,v=k<t.read?t.read-k-1:t.end-k),0===v&&(t.write=k,w=t.inflate_flush(p,w),k=t.write,v=k<t.read?t.read-k-1:t.end-k,k==t.end&&0!==t.read&&(k=0,v=k<t.read?t.read-k-1:t.end-k),0===v)))return t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);t.win[k++]=t.win[S++],v--,S==t.end&&(S=0),r--}e=0;break;case 6:if(0===v&&(k==t.end&&0!==t.read&&(k=0,v=k<t.read?t.read-k-1:t.end-k),0===v&&(t.write=k,w=t.inflate_flush(p,w),k=t.write,v=k<t.read?t.read-k-1:t.end-k,k==t.end&&0!==t.read&&(k=0,v=k<t.read?t.read-k-1:t.end-k),0===v)))return t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);w=0,t.win[k++]=o,v--,e=0;break;case 7:if(I>7&&(I-=8,m++,C--),t.write=k,w=t.inflate_flush(p,w),k=t.write,v=k<t.read?t.read-k-1:t.end-k,t.read!=t.write)return t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);e=8;case 8:return w=1,t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);case 9:return w=kt,t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w);default:return w=mt,t.bitb=z,t.bitk=I,p.avail_in=m,p.total_in+=C-p.next_in_index,p.next_in_index=C,t.write=k,t.inflate_flush(p,w)}},t.free=()=>{}}Ht.inflate_trees_fixed=(t,e,n,i)=>(t[0]=9,e[0]=5,n[0]=zt,i[0]=It,0);const Kt=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function Dt(t,e){const n=this;let i,r=0,s=0,o=0,_=0;const d=[0],c=[0],f=new At;let u=0,h=new l(4320);const b=new Ht;n.bitk=0,n.bitb=0,n.win=new a(e),n.end=e,n.read=0,n.write=0,n.reset=(t,e)=>{e&&(e[0]=0),6==r&&f.free(t),r=0,n.bitk=0,n.bitb=0,n.read=n.write=0},n.reset(t,null),n.inflate_flush=(t,e)=>{let i,a,r;return a=t.next_out_index,r=n.read,i=(r>n.write?n.end:n.write)-r,i>t.avail_out&&(i=t.avail_out),0!==i&&e==vt&&(e=0),t.avail_out-=i,t.total_out+=i,t.next_out.set(n.win.subarray(r,r+i),a),a+=i,r+=i,r==n.end&&(r=0,n.write==n.end&&(n.write=0),i=n.write-r,i>t.avail_out&&(i=t.avail_out),0!==i&&e==vt&&(e=0),t.avail_out-=i,t.total_out+=i,t.next_out.set(n.win.subarray(r,r+i),a),a+=i,r+=i),t.next_out_index=a,n.read=r,e},n.proc=(t,e)=>{let a,l,p,w,x,g,y,m;for(w=t.next_in_index,x=t.avail_in,l=n.bitb,p=n.bitk,g=n.write,y=g<n.read?n.read-g-1:n.end-g;;){let k,v,S,z,I,C,B,E;switch(r){case 0:for(;3>p;){if(0===x)return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);e=0,x--,l|=(255&t.read_byte(w++))<<p,p+=8}switch(a=7&l,u=1&a,a>>>1){case 0:l>>>=3,p-=3,a=7&p,l>>>=a,p-=a,r=1;break;case 1:k=[],v=[],S=[[]],z=[[]],Ht.inflate_trees_fixed(k,v,S,z),f.init(k[0],v[0],S[0],0,z[0],0),l>>>=3,p-=3,r=6;break;case 2:l>>>=3,p-=3,r=3;break;case 3:return l>>>=3,p-=3,r=9,t.msg="invalid block type",e=kt,n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e)}break;case 1:for(;32>p;){if(0===x)return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);e=0,x--,l|=(255&t.read_byte(w++))<<p,p+=8}if((~l>>>16&65535)!=(65535&l))return r=9,t.msg="invalid stored block lengths",e=kt,n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);s=65535&l,l=p=0,r=0!==s?2:0!==u?7:0;break;case 2:if(0===x)return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);if(0===y&&(g==n.end&&0!==n.read&&(g=0,y=g<n.read?n.read-g-1:n.end-g),0===y&&(n.write=g,e=n.inflate_flush(t,e),g=n.write,y=g<n.read?n.read-g-1:n.end-g,g==n.end&&0!==n.read&&(g=0,y=g<n.read?n.read-g-1:n.end-g),0===y)))return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);if(e=0,a=s,a>x&&(a=x),a>y&&(a=y),n.win.set(t.read_buf(w,a),g),w+=a,x-=a,g+=a,y-=a,0!=(s-=a))break;r=0!==u?7:0;break;case 3:for(;14>p;){if(0===x)return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);e=0,x--,l|=(255&t.read_byte(w++))<<p,p+=8}if(o=a=16383&l,(31&a)>29||(a>>5&31)>29)return r=9,t.msg="too many length or distance symbols",e=kt,n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);if(a=258+(31&a)+(a>>5&31),!i||i.length<a)i=[];else for(m=0;a>m;m++)i[m]=0;l>>>=14,p-=14,_=0,r=4;case 4:for(;4+(o>>>10)>_;){for(;3>p;){if(0===x)return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);e=0,x--,l|=(255&t.read_byte(w++))<<p,p+=8}i[Kt[_++]]=7&l,l>>>=3,p-=3}for(;19>_;)i[Kt[_++]]=0;if(d[0]=7,a=b.inflate_trees_bits(i,d,c,h,t),0!=a)return(e=a)==kt&&(i=null,r=9),n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);_=0,r=5;case 5:for(;a=o,258+(31&a)+(a>>5&31)>_;){let s,f;for(a=d[0];a>p;){if(0===x)return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);e=0,x--,l|=(255&t.read_byte(w++))<<p,p+=8}if(a=h[3*(c[0]+(l&St[a]))+1],f=h[3*(c[0]+(l&St[a]))+2],16>f)l>>>=a,p-=a,i[_++]=f;else{for(m=18==f?7:f-14,s=18==f?11:3;a+m>p;){if(0===x)return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);e=0,x--,l|=(255&t.read_byte(w++))<<p,p+=8}if(l>>>=a,p-=a,s+=l&St[m],l>>>=m,p-=m,m=_,a=o,m+s>258+(31&a)+(a>>5&31)||16==f&&1>m)return i=null,r=9,t.msg="invalid bit length repeat",e=kt,n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);f=16==f?i[m-1]:0;do{i[m++]=f}while(0!=--s);_=m}}if(c[0]=-1,I=[],C=[],B=[],E=[],I[0]=9,C[0]=6,a=o,a=b.inflate_trees_dynamic(257+(31&a),1+(a>>5&31),i,I,C,B,E,h,t),0!=a)return a==kt&&(i=null,r=9),e=a,n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);f.init(I[0],C[0],h,B[0],h,E[0]),r=6;case 6:if(n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,1!=(e=f.proc(n,t,e)))return n.inflate_flush(t,e);if(e=0,f.free(t),w=t.next_in_index,x=t.avail_in,l=n.bitb,p=n.bitk,g=n.write,y=g<n.read?n.read-g-1:n.end-g,0===u){r=0;break}r=7;case 7:if(n.write=g,e=n.inflate_flush(t,e),g=n.write,y=g<n.read?n.read-g-1:n.end-g,n.read!=n.write)return n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);r=8;case 8:return e=1,n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);case 9:return e=kt,n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e);default:return e=mt,n.bitb=l,n.bitk=p,t.avail_in=x,t.total_in+=w-t.next_in_index,t.next_in_index=w,n.write=g,n.inflate_flush(t,e)}}},n.free=t=>{n.reset(t,null),n.win=null,h=null},n.set_dictionary=(t,e,i)=>{n.win.set(t.subarray(e,e+i),0),n.read=n.write=i},n.sync_point=()=>1==r?1:0}const Pt=13,Rt=[0,0,255,255];function Wt(){const t=this;function e(t){return t&&t.istate?(t.total_in=t.total_out=0,t.msg=null,t.istate.mode=7,t.istate.blocks.reset(t,null),0):mt}t.mode=0,t.method=0,t.was=[0],t.need=0,t.marker=0,t.wbits=0,t.inflateEnd=e=>(t.blocks&&t.blocks.free(e),t.blocks=null,0),t.inflateInit=(n,i)=>(n.msg=null,t.blocks=null,8>i||i>15?(t.inflateEnd(n),mt):(t.wbits=i,n.istate.blocks=new Dt(n,1<<i),e(n),0)),t.inflate=(t,e)=>{let n,i;if(!t||!t.istate||!t.next_in)return mt;const a=t.istate;for(e=4==e?vt:0,n=vt;;)switch(a.mode){case 0:if(0===t.avail_in)return n;if(n=e,t.avail_in--,t.total_in++,8!=(15&(a.method=t.read_byte(t.next_in_index++)))){a.mode=Pt,t.msg="unknown compression method",a.marker=5;break}if(8+(a.method>>4)>a.wbits){a.mode=Pt,t.msg="invalid win size",a.marker=5;break}a.mode=1;case 1:if(0===t.avail_in)return n;if(n=e,t.avail_in--,t.total_in++,i=255&t.read_byte(t.next_in_index++),((a.method<<8)+i)%31!=0){a.mode=Pt,t.msg="incorrect header check",a.marker=5;break}if(0==(32&i)){a.mode=7;break}a.mode=2;case 2:if(0===t.avail_in)return n;n=e,t.avail_in--,t.total_in++,a.need=(255&t.read_byte(t.next_in_index++))<<24&4278190080,a.mode=3;case 3:if(0===t.avail_in)return n;n=e,t.avail_in--,t.total_in++,a.need+=(255&t.read_byte(t.next_in_index++))<<16&16711680,a.mode=4;case 4:if(0===t.avail_in)return n;n=e,t.avail_in--,t.total_in++,a.need+=(255&t.read_byte(t.next_in_index++))<<8&65280,a.mode=5;case 5:return 0===t.avail_in?n:(n=e,t.avail_in--,t.total_in++,a.need+=255&t.read_byte(t.next_in_index++),a.mode=6,2);case 6:return a.mode=Pt,t.msg="need dictionary",a.marker=0,mt;case 7:if(n=a.blocks.proc(t,n),n==kt){a.mode=Pt,a.marker=0;break}if(0==n&&(n=e),1!=n)return n;n=e,a.blocks.reset(t,a.was),a.mode=12;case 12:return t.avail_in=0,1;case Pt:return kt;default:return mt}},t.inflateSetDictionary=(t,e,n)=>{let i=0,a=n;if(!t||!t.istate||6!=t.istate.mode)return mt;const r=t.istate;return a<1<<r.wbits||(a=(1<<r.wbits)-1,i=n-a),r.blocks.set_dictionary(e,i,a),r.mode=7,0},t.inflateSync=t=>{let n,i,a,r,s;if(!t||!t.istate)return mt;const l=t.istate;if(l.mode!=Pt&&(l.mode=Pt,l.marker=0),0===(n=t.avail_in))return vt;for(i=t.next_in_index,a=l.marker;0!==n&&4>a;)t.read_byte(i)==Rt[a]?a++:a=0!==t.read_byte(i)?0:4-a,i++,n--;return t.total_in+=i-t.next_in_index,t.next_in_index=i,t.avail_in=n,l.marker=a,4!=a?kt:(r=t.total_in,s=t.total_out,e(t),t.total_in=r,t.total_out=s,l.mode=7,0)},t.inflateSyncPoint=t=>t&&t.istate&&t.istate.blocks?t.istate.blocks.sync_point():mt}function Tt(){}function Ut(t){const e=new Tt,r=t&&t.chunkSize?n.floor(2*t.chunkSize):131072,s=new a(r);let l=!1;e.inflateInit(),e.next_out=s,this.append=(t,n)=>{const o=[];let _,d,c=0,f=0,u=0;if(0!==t.length){e.next_in_index=0,e.next_in=t,e.avail_in=t.length;do{if(e.next_out_index=0,e.avail_out=r,0!==e.avail_in||l||(e.next_in_index=0,l=!0),_=e.inflate(0),l&&_===vt){if(0!==e.avail_in)throw new i("inflating: bad input")}else if(0!==_&&1!==_)throw new i("inflating: "+e.msg);if((l||1===_)&&e.avail_in===t.length)throw new i("inflating: bad input");e.next_out_index&&(e.next_out_index===r?o.push(new a(s)):o.push(s.slice(0,e.next_out_index))),u+=e.next_out_index,n&&e.next_in_index>0&&e.next_in_index!=c&&(n(e.next_in_index),c=e.next_in_index)}while(e.avail_in>0||0===e.avail_out);return o.length>1?(d=new a(u),o.forEach((t=>{d.set(t,f),f+=t.length}))):d=o[0]||new a(0),d}},this.flush=()=>{e.inflateEnd()}}Tt.prototype={inflateInit:function(t){const e=this;return e.istate=new Wt,t||(t=15),e.istate.inflateInit(e,t)},inflate:function(t){const e=this;return e.istate?e.istate.inflate(e,t):mt},inflateEnd:function(){const t=this;if(!t.istate)return mt;const e=t.istate.inflateEnd(t);return t.istate=null,e},inflateSync:function(){const t=this;return t.istate?t.istate.inflateSync(t):mt},inflateSetDictionary:function(t,e){const n=this;return n.istate?n.istate.inflateSetDictionary(n,t,e):mt},read_byte:function(t){return this.next_in[t]},read_buf:function(t,e){return this.next_in.subarray(t,t+e)}},self.initCodec=()=>{self.Deflate=yt,self.Inflate=Ut}}();
